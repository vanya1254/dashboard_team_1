/*!
    common variables/functions/settings
    can be overrided via skin.json
 */

// common

$main-color:                            #9797C4             !default;


$rounded-corner:                        0.76rem             !default;
$main-font-family:                      'Open Sans'         !default;
$main-font-size:                        13px                !default;
$font:                                  $main-font-size $main-font-family, "Helvetica Neue", "Helvetica", "Arial", sans-serif !default;

// sizes
$dlg-auth-width:                        46.92rem            !default;
$dlg-auth-height:                       24.54rem            !default;
$VizelDashlet-header-height:            2.54rem             !default;
$shell-header-height:                   3.538rem            !default;
$shell-dataset-title-height:            2.384rem            !default;
$horizontal-panel-width:                26.923rem           !default;
$periods-panel-height:                  5.92rem             !default;
$periods-panel-top-offset:              calc(#{$shell-header-height} + #{$shell-dataset-title-height}) !default;
$dashboards-header-height:              3.076rem            !default;
$periods-panel-height-x2:               9.23rem             !default;
$header-height:                         3.08rem             !default;


$huge: 1.9rem;
$large: 1.3rem;
$normal: 1.3rem;
$small: 1rem;

// colors
// https://coolors.co/176a6e-e63946-f1faee-a8dadc-1d3557
// https://coolors.co/176a6e-e63946-efefef-a8dadc-1d3557

$primary:       #1D3557 !default;
$light:         #A8DADC !default;
$red:           #960200 !default;
$green:         #5BA221 !default;
$yellow:        #F3DE2C !default;
$background:    #FFFFFF !default;

// 455a64

$active-color:                          #64b5f6             !default;
$shell-header-color:                    #ffffff             !default;
$shell-header-gradient-start:           #575757             !default;
$shell-header-gradient-end:             #232323             !default;
$shell-dataset-title-background:        #000000             !default;


// behaviour
$shell-header-display-logo:             true                !default;
$shell-header-display-logout:           true                !default;
$shell-header-display-toolbar:          true                !default;
$hasDatasetsList:                       false               !default;

// will be available to in code
:export {
  hasDatasetsList: $hasDatasetsList;
  mainFontFamily: $main-font-family;
  mainFontSize: $main-font-size;
  mainColor: $main-color;
  font: $font;
}

// mixins...
@mixin transform($property) {
  -webkit-transform: $property;
  -moz-transform: $property;
  -ms-transform: $property;
  -o-transform: $property;
  transform: $property;
}

@mixin transition-transform($duration) {
  -webkit-transition-duration: $duration;
  -moz-transition-duration: $duration;
  -ms-transition-duration: $duration;
  -o-transition-duration: $duration;
  transition-duration: $duration;

  -webkit-transition-property: -webkit-transform, rotateY;
  -moz-transition-property: -moz-transform, rotateY;
  -ms-transition-property: -ms-transform, rotateY;
  -o-transition-property: -o-transform, rotateY;
  transition-property: transform, rotateY;
}

@mixin magic-center() {
  position: absolute;
  left: 50%;
  top: 50%;
  @include transform(translate(-50%, -50%));
}

@mixin gradient ($startColor: #eee, $endColor: white) {
  background: $startColor;
  background: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
  background: -webkit-linear-gradient(top, $startColor, $endColor);
  background: -moz-linear-gradient(top, $startColor, $endColor);
  background: -ms-linear-gradient(top, $startColor, $endColor);
  background: -o-linear-gradient(top, $startColor, $endColor);
  background: linear-gradient(to bottom, $startColor, $endColor);
}

@mixin error-background() {
  background: repeating-linear-gradient(-45deg, #ffcdd2, #ffcdd2 10px, #ffdede 10px, #ffdede 20px);
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function convertToRem($fontSize) {
  $fontSize: strip-unit($fontSize);
  @return calc( #{$fontSize + rem} / 13 );
}
